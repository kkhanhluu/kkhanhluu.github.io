{"version":3,"file":"component---src-pages-index-tsx-55d1c9cfbfe9887031d7.js","mappings":"uLAIaA,EAA+B,kBAC1CC,EAAAA,cAAAA,MAAAA,CAAKC,UCJU,0BDKbD,EAAAA,cAACE,EAAAA,EAAD,CACED,UCLiB,+BDMjBE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,0BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBACJC,YAAY,UATd,sBAWAV,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,OAAAA,CAAMC,UCfM,2BDeZ,cACaD,EAAAA,cAAAA,IAAAA,CAAGW,KAAK,gCAAR,cAEbX,EAAAA,cAAAA,OAAAA,KAAAA,mD,0FELOY,EAAmD,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC3DC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAEpD,OACEjB,EAAAA,cAAAA,KAAAA,CAAIkB,IAAKL,EAAKG,OAAOC,MACnBjB,EAAAA,cAAAA,UAAAA,CAASC,UClBG,8BDkBqBkB,WAAS,EAACC,SAAS,6BAClDpB,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACqB,EAAAA,KAAD,CAAMpB,UCtBE,gCDsBwBqB,GAAIT,EAAKG,OAAOC,KAAMM,SAAS,OAC7DvB,EAAAA,cAAAA,OAAAA,CAAMuB,SAAS,YAAYT,KAG/Bd,EAAAA,cAAAA,QAAAA,KACGa,EAAKE,YAAYS,KADpB,MAC6BX,EAAKE,YAAYU,KAD9C,qBAIFzB,EAAAA,cAAAA,UAAAA,KACEA,EAAAA,cAAAA,IAAAA,CACEC,UCjCa,qCDkCbyB,wBAAyB,CACvBC,OAAQd,EAAKE,YAAYa,aAAef,EAAKgB,SAE/CN,SAAS,oB,8BEWrB,EAnBiE,SAAC,GAAuB,MAArBO,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAClEC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBpB,QAAxB,QACZqB,EAAQL,EAAKM,kBAAkBC,MAErC,OACErC,EAAAA,cAACsC,EAAAA,EAAD,CAAQP,SAAUA,EAAUjB,MAAOkB,GACjChC,EAAAA,cAACuC,EAAAA,EAAD,CAAKzB,MAAM,cACXd,EAAAA,cAAAA,OAAAA,CAAMC,UCnCW,kCDoCfD,EAAAA,cAACD,EAAAA,EAAD,MACAC,EAAAA,cAAAA,KAAAA,CAAIC,UCtCW,kCDuCZkC,EAAMK,KAAI,SAAA3B,GAAI,OACbb,EAAAA,cAACY,EAAD,CAASM,IAAKL,EAAKG,OAAOC,KAAMJ,KAAMA,Y","sources":["webpack://kkhanhluu.github.io/./src/components/Bio/index.tsx","webpack://kkhanhluu.github.io/./src/components/Bio/bio.module.scss","webpack://kkhanhluu.github.io/./src/components/Article/index.tsx","webpack://kkhanhluu.github.io/./src/components/Article/article.module.scss","webpack://kkhanhluu.github.io/./src/pages/index.tsx","webpack://kkhanhluu.github.io/./src/pages/index.module.scss"],"sourcesContent":["import { StaticImage } from 'gatsby-plugin-image';\nimport * as React from 'react';\nimport * as styles from './bio.module.scss';\n\nexport const Bio: React.FunctionComponent = () => (\n  <div className={styles.bio}>\n    <StaticImage\n      className={styles.bioAvatar}\n      layout=\"fixed\"\n      formats={['auto', 'webp', 'avif']}\n      src=\"../../images/avatar.png\"\n      width={60}\n      height={60}\n      quality={95}\n      alt=\"Profile picture\"\n      placeholder=\"blurred\"\n    />\n    <div>\n      <span className={styles.link}>\n        Written by <a href=\"https://github.com/kkhanhluu\">Khanh Luu</a>\n      </span>\n      <span>On my journey to become a better developer.</span>\n    </div>\n  </div>\n);\n","// extracted by mini-css-extract-plugin\nexport var bio = \"bio-module--bio--2ce78\";\nexport var bioAvatar = \"bio-module--bioAvatar--75836\";\nexport var link = \"bio-module--link--89ad5\";","import { Link } from 'gatsby';\nimport * as React from 'react';\nimport * as styles from './article.module.scss';\n\ninterface Post {\n  excerpt: string;\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    date: string;\n    title: string;\n    description: string;\n    time: string;\n  };\n}\nexport const Article: React.FunctionComponent<{ post: Post }> = ({ post }) => {\n  const title = post.frontmatter.title || post.fields.slug;\n\n  return (\n    <li key={post.fields.slug}>\n      <article className={styles.post} itemScope itemType=\"http://schema.org/Article\">\n        <header>\n          <h2>\n            <Link className={styles.header} to={post.fields.slug} itemProp=\"url\">\n              <span itemProp=\"headline\">{title}</span>\n            </Link>\n          </h2>\n          <small>\n            {post.frontmatter.date} - {post.frontmatter.time} minutes to read\n          </small>\n        </header>\n        <section>\n          <p\n            className={styles.description}\n            dangerouslySetInnerHTML={{\n              __html: post.frontmatter.description || post.excerpt,\n            }}\n            itemProp=\"description\"\n          />\n        </section>\n      </article>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var description = \"article-module--description--52e97\";\nexport var header = \"article-module--header--7103e\";\nexport var post = \"article-module--post--3d2ad\";","import { Article } from 'components/Article';\nimport { Bio } from 'components/Bio';\nimport { graphql, PageProps } from 'gatsby';\nimport * as React from 'react';\nimport { Layout } from '../components/Layout';\nimport { Seo } from '../components/Seo';\nimport * as styles from './index.module.scss';\n\ntype DataProps = {\n  site: {\n    siteMetadata: {\n      title: string;\n    };\n  };\n  allMarkdownRemark: {\n    nodes: {\n      excerpt: string;\n      fields: {\n        slug: string;\n      };\n      frontmatter: {\n        date: string;\n        title: string;\n        description: string;\n        time: string;\n      };\n    }[];\n  };\n};\n\nconst BlogIndex: React.FunctionComponent<PageProps<DataProps>> = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const posts = data.allMarkdownRemark.nodes;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <main className={styles.mainPosts}>\n        <Bio />\n        <ol className={styles.listPosts}>\n          {posts.map(post => (\n            <Article key={post.fields.slug} post={post} />\n          ))}\n        </ol>\n      </main>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          time\n        }\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport var listPosts = \"index-module--listPosts--b9ed3\";\nexport var mainPosts = \"index-module--mainPosts--cbfdc\";"],"names":["Bio","React","className","StaticImage","layout","formats","src","width","height","quality","alt","placeholder","href","Article","post","title","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","time","dangerouslySetInnerHTML","__html","description","excerpt","data","location","siteTitle","site","siteMetadata","posts","allMarkdownRemark","nodes","Layout","Seo","map"],"sourceRoot":""}